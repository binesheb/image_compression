using System;
using System.Drawing;
using System.Drawing.Imaging;

namespace ImageCompression
{
    class Program
    {
        static void Main(string[] args)
        {
            string sourceImagePath;

            if (args.Length > 0)
            {
                // If a file was dragged and dropped onto the program window, use it as the input file
                sourceImagePath = args[0];
            }
            else
            {
                // Otherwise, prompt the user to enter the input file path
                Console.Write("Enter the input file path: ");
                sourceImagePath = Console.ReadLine();
            }

            // Prompt the user to enter the desired file size in kilobytes (KB)
            Console.Write("Enter the desired file size in KB: ");
            long desiredFileSizeKB = long.Parse(Console.ReadLine());

            // Convert the desired file size to bytes
            long desiredFileSizeBytes = desiredFileSizeKB * 1024;

            // Load the source image from file
            Bitmap sourceImage = new Bitmap(sourceImagePath);

            // Set the JPEG compression level (0-100, with 100 being the highest quality)
            EncoderParameters encoderParams = new EncoderParameters();
            encoderParams.Param[0] = new EncoderParameter(Encoder.Quality, 99L);

            // Create a memory stream to hold the compressed image data
            System.IO.MemoryStream ms = new System.IO.MemoryStream();

            // Save the compressed image to the memory stream
            sourceImage.Save(ms, GetEncoderInfo("image/jpeg"), encoderParams);

            // Check if the compressed image size is within the desired range
            if (ms.Length <= desiredFileSizeBytes)
            {
                // The compressed image is already within the desired file size range, so save it to the output file and exit
                Console.Write("Enter the output file path: ");
                string outputImagePath = Console.ReadLine();
                System.IO.File.WriteAllBytes(outputImagePath, ms.ToArray());
                Console.WriteLine($"Image compression complete. Output file size: {ms.Length / 1024} KB.");
                return;
            }

            // If the compressed image is too large, reduce the JPEG compression level and try again
            int compressionLevel = 98; // Starting compression level
            while (ms.Length > desiredFileSizeBytes && compressionLevel > 0)
            {
                // Decrease the JPEG compression level
                compressionLevel--;
                encoderParams.Param[0] = new EncoderParameter(Encoder.Quality, compressionLevel);

                // Reset the memory stream position and save the compressed image with the new compression level
                ms.Position = 0;
                sourceImage.Save(ms, GetEncoderInfo("image/jpeg"), encoderParams);
            }

            // Save the final compressed image to the output file
            Console.Write("Enter the output file path: ");
            string outputImagePath = Console.ReadLine();
            System.IO.File.WriteAllBytes(outputImagePath, ms.ToArray());
            Console.WriteLine($"Image compression complete. Output file size: {ms.Length / 1024} KB.");
        }

        // Helper method to get the JPEG encoder information
        private static ImageCodecInfo GetEncoderInfo(string mimeType)
        {
            ImageCodecInfo[] codecs = ImageCodecInfo.GetImageEncoders();
            foreach (ImageCodecInfo codec in codecs)
            {
                if (codec.MimeType == mimeType)
                {
                    return codec;
                }
            }
            return null;
        }

        // Set the program window title
        static Program()
        {
            Console.Title = "Image Compressor by binesheb";
        }
    }
}
